"""Database helpers."""

import os
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

from models import Base
from .shell import success


ALEMBIC_UPGRADE_HEAD = ['alembic', 'upgrade', 'head']
ALEMBIC_GENERATE = ['alembic', 'revision', '--autogenerate']


def get_session_factory(database_url: str):
    """Create and return a session factory."""
    engine = create_engine(database_url)
    Base.metadata.bind = engine
    return sessionmaker(bind=engine)


def get_session(database_url):
    """Convenience shortcut to create and return a database session."""
    factory = get_session_factory(database_url)
    return factory()


def create_migrations(message):
    """Create autogenerated Alembic migrations."""
    message_opts = message and ['-m', message] or []
    if success([*ALEMBIC_GENERATE, *message_opts]):
        print('OK')


def apply_migrations():
    """Apply Alembic migrations."""
    return success(ALEMBIC_UPGRADE_HEAD)


def db_exists(name):
    """Return whether a SQLite database with given name exists."""
    return os.path.exists(name)


def delete_database(name):
    """Delete the SQLite database with given name.

    NOTE: does not check if the database actually exists.
    """
    return success(['rm', name])
